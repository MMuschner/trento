---

- name: "{{ name }}.check"
  shell: |
    # SAP HANA Resource Agent is not configured, then fail
    cibadmin -Q --xpath "//primitive[@type='SAPHana']/@type" || exit 1
    # if configured and not msl, then fail
    cibadmin -Q --xpath "//master/primitive[@type='SAPHana']/@type" || exit 1
    # check the following values, if any do not match expected fail.
    XPATH="//primitive[@type='SAPHana']/operations/op"
    [[ $(cibadmin -Q --xpath "${XPATH} [@name='monitor'] [@role='Master']" | grep -oP 'interval="\K[^"]+') != "{{ expected[name + '.master_interval'] }}" ]] && exit 1
    [[ $(cibadmin -Q --xpath "${XPATH} [@name='monitor'] [@role='Master']" | grep -oP 'timeout="\K[^"]+') != "{{ expected[name + '.master_timeout'] }}" ]] && exit 1
    [[ $(cibadmin -Q --xpath "${XPATH} [@name='monitor'] [@role='Slave']" | grep -oP 'interval="\K[^"]+') != "{{ expected[name + '.slave_interval'] }}" ]] && exit 1
    [[ $(cibadmin -Q --xpath "${XPATH} [@name='monitor'] [@role='Slave']" | grep -oP 'timeout="\K[^"]+') != "{{ expected[name + '.slave_timeout'] }}" ]] && exit 1
    [[ $(cibadmin -Q --xpath "${XPATH} [@name='start']" | grep -oP 'interval="\K[^"]+') != "{{ expected[name + '.start_interval'] }}" ]] && exit 1
    [[ $(cibadmin -Q --xpath "${XPATH} [@name='start']" | grep -oP 'timeout="\K[^"]+') != "{{ expected[name + '.start_timeout'] }}" ]] && exit 1
    [[ $(cibadmin -Q --xpath "${XPATH} [@name='stop']" | grep -oP 'interval="\K[^"]+') != "{{ expected[name + '.stop_interval'] }}" ]] && exit 1
    [[ $(cibadmin -Q --xpath "${XPATH} [@name='stop']" | grep -oP 'timeout="\K[^"]+') != "{{ expected[name + '.stop_timeout'] }}" ]] && exit 1
    [[ $(cibadmin -Q --xpath "${XPATH} [@name='promote']" | grep -oP 'interval="\K[^"]+') != "{{ expected[name + '.promote_interval'] }}" ]] && exit 1
    [[ $(cibadmin -Q --xpath "${XPATH} [@name='promote']" | grep -oP 'timeout="\K[^"]+') != "{{ expected[name + '.promote_timeout'] }}" ]] && exit 1

    XPATH="//primitive[@type='SAPHana']/instance_attributes/nvpair"
    [[ $(cibadmin -Q --xpath "${XPATH} [@name='PREFER_SITE_TAKEOVER']" | grep -oP 'value="\K[^"]+' | tr '[:upper:]' '[:lower:]') != "{{ expected[name + '.nvpair_PREFER_SITE_TAKEOVER'] }}" ]] && exit 1
    [[ $(cibadmin -Q --xpath "${XPATH} [@name='AUTOMATED_REGISTER']" | grep -oP 'value="\K[^"]+' | tr '[:upper:]' '[:lower:]') != "{{ expected[name + '.nvpair_AUTOMATED_REGISTER'] }}" ]] && exit 1
    [[ $(cibadmin -Q --xpath "${XPATH} [@name='DUPLICATE_PRIMARY_TIMEOUT']" | grep -oP 'value="\K[^"]+') != "{{ expected[name + '.nvpair_DUPLICATE_PRIMARY_TIMEOUT'] }}" ]] && exit 1
    exit 0
  check_mode: false
  register: config_updated
  changed_when: config_updated.rc != 0
  failed_when: config_updated.rc > 1

- block:
    - name: Post results
      import_role:
        name: post-results
  when:
    - ansible_check_mode
  vars:
    status: "{{ config_updated is not changed }}"
